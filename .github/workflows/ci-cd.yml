name: "Terraform CI/CD"

on:
  push:
    branches: [ main ]
  pull_request:

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  TF_VAR_databricks_token: ${{ secrets.DATABRICKS_TOKEN }}

jobs:
  terraform:
    name: "Terraform Plan and Apply"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Fetch Databricks PAT from Key Vault
        id: get-pat
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            export DATABRICKS_PAT=$(az keyvault secret show --vault-name ${{ secrets.KEY_VAULT_NAME }} --name databricks-pat --query value -o tsv)
            echo "DATABRICKS_PAT=$DATABRICKS_PAT" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        env:
          TF_VAR_databricks_token: ${{ env.DATABRICKS_PAT }}
        run: terraform plan -var-file="terraform.tfvars"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        env:
          TF_VAR_databricks_token: ${{ env.DATABRICKS_PAT }}
        run: terraform apply -auto-approve -var-file="terraform.tfvars"

# Add KEY_VAULT_NAME to the required secrets in your repo settings for this workflow to work.
# Example: KEY_VAULT_NAME: my-keyvault-name
